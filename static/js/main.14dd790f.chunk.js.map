{"version":3,"sources":["Persist.js","memo/Item.js","memo/Memo.js","memo/AddForm.js","memo/FindForm.js","memo/DelForm.js","memo/MemoPage.js","App.js","reportWebVitals.js","index.js"],"names":["usePersist","ky","initVal","key","useState","item","window","localStorage","getItem","JSON","parse","err","console","log","savedValue","setSavedValue","val","setItem","stringify","Item","props","d","Date","value","created","getMonth","getDate","getHours","getMinutes","style","width","index","message","textAlign","Memo","memo","fmemo","mode","setMode","data","map","kye","className","AddForm","setMemo","setMessage","onSubmit","e","unshift","action","type","onChange","target","required","FindForm","setFMemo","res","filter","includes","DelForm","num","setNum","items","substring","defaultValue","MemoPage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14dd790f.chunk.js","sourcesContent":["import {useState} from 'react'\n\nfunction usePersist(ky, initVal) {\n    const key = \"hooks:\" + ky\n    const value = () => {\n        try {\n            const item = window.localStorage.getItem(key)\n            return item ? JSON.parse(item) : initVal\n        } catch (err) {\n            console.log(err)\n            return initVal;\n        }\n    }\n    const setValue = (val) => {\n        try {\n            setSavedValue(val)\n            console.log(key)\n            window.localStorage.setItem(key, JSON.stringify(val))\n        } catch (err) {\n            console.log(err)\n        }\n    }\n    const [savedValue, setSavedValue] = useState(value)\n\n    return [savedValue, setValue]\n}\n\nexport default usePersist","import React, { useState, useEffect }  from 'react'\n\nfunction Item (props) {\n    const th = {\n        width: \"100px\"\n    }\n    const td = {\n        textAlign: \"right\" ,\n        width: \"150px\"\n    }\n    let d = new Date(Date.parse(props.value.created))\n    let f = d.getMonth() + '/' + d.getDate() + ''\n         + d.getHours() + ':' + d.getMinutes()\n\n         return (\n             <tr><th style={th}>NO,{props.index}</th>\n             <td>{props.value.message}</td>\n             <td style={td}></td>\n             </tr>\n         )\n}\nexport default Item","import React, {useState, useEffect} from 'react'\nimport usePersist   from '../Persist'\n\nimport Item from './Item'\n\nfunction Memo(props) {\n    const [memo, setMemo] = usePersist(\"memo\",[])\n    const [fmemo, setFMemo] = usePersist(\"findMemo\",[])\n    const [mode, setMode] = usePersist('mode','default')\n\n    let data = []\n        //カラー配列をdataとゆう変数名\n    switch (mode){\n        case 'default':\n            data = memo.map((value,key)=>(\n                <Item key={value.message} value={value} index={key + 1} />\n            ))\n            setMode('deafult')\n            break\n\n        case 'find':\n            data = fmemo.map((value,kye)=>(\n                <Item key={value.message} value={value} index={kye + 1} />\n            ))\n            break\n\n            default:\n                data = memo.map((value,key)=>(\n                    <Item key={value.message} value={value} index={key + 1} />\n                ))\n    }\n    return (\n        <table className=\"table\" mt-4>\n            <tbody>{data}</tbody>\n        </table>\n    )\n}\n\nexport default Memo","import React, {useState, useEffect} from 'react'\nimport usePersist  from '../Persist'\n\nfunction AddForm (props) {\n    const [memo, setMemo] = usePersist(\"memo\",[])\n    const [message, setMessage] = useState('')\n\n    const doChange = (e)=>{\n        setMessage(e.target.value)\n    }\n\n    const doAction = (e)=>{\n      const data = {\n          message: message,\n          created: new Date()\n      }\n      memo.unshift(data)\n      setMemo(memo)\n      setMessage('')\n    }\n\n    return (\n        <form onSubmit={doAction} action=\"\">\n            <div className=\"form-group row\">\n                <input type=\"text\" className=\"form-control-sm col\"\n                onChange={doChange} value={message} required />\n                <input type=\"submit\" value=\"Add\"\n                   className=\"btn btn-primary btn-sm co1-2\" />\n            </div>\n        </form>\n    )\n}\n\nexport default AddForm","import React, { useState, useEffect, memo} from 'react'\nimport  usePersist  from '../Persist'\n\nfunction FindForm (props) {\n    const [memo, setMemo] = usePersist(\"memo\",[])\n    const [fmemo, setFMemo] = usePersist(\"findMemo\",[])\n    const [message, setMessage] = useState('')\n    const [mode, setMode] = usePersist('mode','find')\n\n    const doChange = (e)=> {\n        setMessage(e.target.value)\n    }\n\n    const doAction = (e)=> {\n        if (message ==='') {\n            setMode('default')\n            return\n        }\n        let res = memo.filter((item,key)=> {\n            return item.message.includes(message)\n        })\n        setFMemo(res)\n        setMode('find')\n        setMessage('')\n    }\n\n    return (\n        <form onSubmit={doAction}>\n            <div className=\"form-group row\">\n                <input type=\"text\" onChange={doChange}\n                value={message} className=\"form-control-sm col\" />\n                <input type=\"submit\" value=\"Find\"\n                className=\"btn btn-primary btn-sm col-2\" />\n            </div>\n        </form>\n    )\n}\nexport default FindForm","import React, {useState, useEffect, memo} from 'react'\nimport  usePersist  from  '../Persist'\n\nfunction DelForm (props) {\n    const [memo, setMemo] = usePersist(\"memo\",[])\n    const [num, setNum] = useState(0)\n\n    const doChange = (e)=> {\n       setNum(e.target.value)\n    }\n    const doAction = (e)=> {\n        let res = memo.filter((item,key)=>{\n        return key !== num\n        })\n\n        setMemo(res)\n        setNum(0)\n}\n\nlet items = memo.map((value,key)=>(\n    <option key={key} value={key}>\n        {value.message.substring(0,10)}\n    </option>\n))\n\nreturn (\n    <form onSubmit={doAction}>\n        <div className=\"form-group row\">\n            <select onChange={doChange} className=\"form-control-sm col\"\n            defaultValue=\"-1\">\n                {items}\n            </select>\n            <input type=\"submit\" value=\"Del\"\n               className=\"btn btn-primary btn-sm co1-2\" />\n        </div>\n    </form>\n)\n}\n\nexport default DelForm","import usePersist from '../Persist'\nimport Memo from './Memo';\nimport AddForm from './AddForm';\nimport FindForm from './FindForm';\nimport DelForm from './DelForm';\n\nfunction MemoPage() {\n    const [mode, setMode] = usePersist('mode','default')\n\n    return (\n        <div>\n            <h5 className=\"my-3\">mode: {mode}</h5>\n            <div className=\"alert alert-primary pb-0\">\n                <AddForm />\n                <FindForm />\n                <DelForm />\n            </div>\n            <Memo />\n        </div>\n    )\n}\nexport default MemoPage","import { render } from '@testing-library/react'\nimport './App.css'\nimport MemoPage from './memo/MemoPage'\n\nfunction App() {\n  return (\n    <div>\n      <h1 className=\"bg-primary text-white display-4\">React</h1>\n      <div className=\"container\">\n        <h4 className=\"my-3\">Memo.</h4>\n        <MemoPage />\n      </div>\n    </div>\n  )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}